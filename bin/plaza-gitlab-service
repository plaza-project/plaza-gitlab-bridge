#!/usr/bin/env python3

import logging
import sys
from plaza_service import (
    PlazaService,
    ServiceConfiguration,
    ServiceBlock,
    BlockArgument,
    BlockType,
)
import gitlab

from plaza_gitlab_service import serializers

GITLAB_INSTANCE = "https://gitlab.com"
PRIVATE_TOKEN = <REDACTED>


class GitlabService(PlazaService):
    def __init__(self, *args, **kwargs):
        PlazaService.__init__(self, *args, **kwargs)
        self.SUPPORTED_FUNCTIONS = {"get_issues_from_project": self.get_issues}

    def get_issues(self, project_id):
        gl = gitlab.Gitlab(GITLAB_INSTANCE, private_token=PRIVATE_TOKEN)
        project = gl.projects.get(project_id)
        return list(map(serializers.serialize_issue, project.issues.list()))

    def handle_call(self, function_name, arguments):
        logging.info("{}({})".format(function_name, ", ".join(arguments)))
        return self.SUPPORTED_FUNCTIONS[function_name](*arguments)

    def handle_configuration(self):
        return ServiceConfiguration(
            service_name="Gitlab",
            is_public=False,
            blocks=[
                ServiceBlock(
                    id="get_issues_from_project",
                    function_name="get_issues",
                    message="Get issues from project %1",
                    arguments=[BlockArgument(type=str, default="kenkeiras/plaza")],
                    block_type=BlockType.GETTER,
                    block_result_type=None,  # TODO: change
                )
            ],
        )


if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("{} <service-operation-url>".format(sys.argv[0]))
        exit(0)

    logging.basicConfig()
    logging.getLogger().setLevel(logging.DEBUG)
    service = GitlabService(sys.argv[1])
    service.run()
